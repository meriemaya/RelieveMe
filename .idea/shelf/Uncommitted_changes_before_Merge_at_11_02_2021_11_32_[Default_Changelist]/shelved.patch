Index: app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/ToDoTaskFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.e.releiveme.homeActivity.toDoFragment;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.fragment.app.Fragment;\nimport androidx.lifecycle.Observer;\nimport androidx.recyclerview.widget.DividerItemDecoration;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.e.releiveme.R;\nimport com.e.releiveme.data.Models.Task;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\npublic class ToDoTaskFragment extends Fragment implements View.OnClickListener, Adapter.ItemClickListener {\n\n    private Button button, retour, retourliste;\n    private TextView afaire, tachetitre, tachedescription, tachedate;\n    public Adapter adapter;\n    RecyclerView recyclerView;\n    TodoTaskViewModel taskViewModel;\n\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n\n    public ToDoTaskFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment AFaire.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static ToDoTaskFragment newInstance(String param1, String param2) {\n        ToDoTaskFragment fragment = new ToDoTaskFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n         taskViewModel = new TodoTaskViewModel(getActivity().getApplication());\n\n    }\n\n    /**\n     * @param view\n     */\n    private void initViews(View view) {\n        recyclerView = (RecyclerView) view.findViewById(R.id.a_faire_recycler_view);\n        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n\n        button = (Button) view.findViewById(R.id.buttonAFaire);\n        button.setOnClickListener(this);\n        retour = (Button) view.findViewById(R.id.returnAFaire);\n        retour.setOnClickListener(this);\n        retour.setVisibility(View.GONE);\n        afaire = (TextView) view.findViewById(R.id.afaire);\n        retourliste = (Button) view.findViewById(R.id.afairetacheretour);\n        retourliste.setOnClickListener(this);\n        retourliste.setVisibility(View.GONE);\n        tachetitre = (TextView) view.findViewById(R.id.afairetachetitre);\n        tachetitre.setVisibility(View.GONE);\n        tachedescription = (TextView) view.findViewById(R.id.afairetachedescription);\n        tachedescription.setVisibility(View.GONE);\n        tachedate = (TextView) view.findViewById(R.id.afairetachedate);\n        tachedate.setVisibility(View.GONE);\n        recyclerView.setVisibility(View.GONE);\n\n    }\n\n    /**\n     * @param view\n     */\n    private void initObservers(View view) {\n        taskViewModel.mAllTasks.observe(this, new Observer<List<Task>>() {\n            @Override\n            public void onChanged(List<Task> tasks) {\n                List<String> description= tasks.stream().map(task -> task.getTaskDescription()).collect(Collectors.toList());\n                populateData(description);\n            }\n        });\n    }\n\n    /**\n     * @param data\n     */\n    private void populateData(List<String> data){\n        adapter = new Adapter(getContext(), data);\n        adapter.setClickListener(this);\n        recyclerView.setAdapter(adapter);\n        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(recyclerView.getContext(), 1);\n        recyclerView.addItemDecoration(dividerItemDecoration);\n    }\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View view = inflater.inflate(R.layout.fragment_a_faire, container, false);\n        initViews(view);\n        initObservers(view);\n\n        return view;\n    }\n\n\n\n    @Override\n    public void onClick(View v) {\n        if(v == button) {\n            button.setVisibility(View.GONE);\n            afaire.setVisibility(View.GONE);\n            retour.setVisibility(View.VISIBLE);\n            recyclerView.setVisibility(View.VISIBLE);\n        }\n        else if(v == retour){\n            button.setVisibility(View.VISIBLE);\n            afaire.setVisibility(View.VISIBLE);\n            retour.setVisibility(View.GONE);\n            recyclerView.setVisibility(View.GONE);\n        }\n        else if(v == retourliste){\n            retour.setVisibility(View.VISIBLE);\n            recyclerView.setVisibility(View.VISIBLE);\n            retourliste.setVisibility(View.GONE);\n            tachetitre.setVisibility(View.GONE);\n            tachedescription.setVisibility(View.GONE);\n            tachedate.setVisibility(View.GONE);\n        }\n    }\n\n    @Override\n    public void onItemClick(View view, int position) {\n        //Toast.makeText(getContext(), \"You clicked \" + adapter.getItem(position) + \" on row number \" + position, Toast.LENGTH_SHORT).show();\n        retour.setVisibility(View.GONE);\n        recyclerView.setVisibility(View.GONE);\n        retourliste.setVisibility(View.VISIBLE);\n        tachetitre.setVisibility(View.VISIBLE);\n        tachedescription.setVisibility(View.VISIBLE);\n        tachedate.setVisibility(View.VISIBLE);\n        tachetitre.setText(adapter.getItem(position));\n        tachedescription.setText(\"description\");\n        tachedate.setText(\"01/01/01 12:12\");\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/ToDoTaskFragment.java	(revision d2eca443fd4b9c80a3546f549edb1cb2b18c12d2)
+++ app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/ToDoTaskFragment.java	(date 1613038566000)
@@ -1,6 +1,7 @@
 package com.e.releiveme.homeActivity.toDoFragment;
 
 import android.os.Bundle;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -115,6 +116,7 @@
      * @param data
      */
     private void populateData(List<String> data){
+        Log.d("data", String.valueOf(data));
         adapter = new Adapter(getContext(), data);
         adapter.setClickListener(this);
         recyclerView.setAdapter(adapter);
Index: app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/TodoTaskViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.e.releiveme.homeActivity.toDoFragment;\n\nimport android.app.Application;\n\nimport androidx.lifecycle.AndroidViewModel;\nimport androidx.lifecycle.LiveData;\nimport androidx.lifecycle.Transformations;\n\nimport com.e.releiveme.data.Models.Task;\nimport com.e.releiveme.data.Repository;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\npublic class TodoTaskViewModel extends AndroidViewModel {\n\n    private Repository mRepository;\n\n    public final LiveData<List<Task>> mAllTasks;\n\n    public TodoTaskViewModel(Application application) {\n        super(application);\n        mRepository = new Repository(application);\n        mAllTasks = mRepository.getAllTasks();\n        //insert(new Task(new Date() , \"Course\", \"quot\", \"d\", \"TODO\", 45));\n        //insert(new Task(new Date() , \"La poste\", \"quot\", \"w\", \"TODO\", 20));\n        //insert(new Task(new Date() , \"Medoc\", \"quot\", \"d\", \"DONE\", 2));\n        //insert(new Task(new Date() , \"repas Familial\", \"quot\", \"w\", \"DONE\", 60));\n    }\n\n    public void insert(Task task) { mRepository.insert(task); }\n\n    LiveData<List<Task>> getAllTasks() { return mAllTasks; }\n\n    LiveData<List<String>> getTasksLiveData() {\n        LiveData<List<Task>> tasksLiveData = mRepository.getAllToDoTasks();\n        return Transformations.map(tasksLiveData, userList -> {\n            return userList.stream().map(task -> task.getTaskDescription()).collect(Collectors.toList());\n        });\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/TodoTaskViewModel.java	(revision d2eca443fd4b9c80a3546f549edb1cb2b18c12d2)
+++ app/src/main/java/com/e/releiveme/homeActivity/toDoFragment/TodoTaskViewModel.java	(date 1613039531000)
@@ -1,6 +1,7 @@
 package com.e.releiveme.homeActivity.toDoFragment;
 
 import android.app.Application;
+import android.util.Log;
 
 import androidx.lifecycle.AndroidViewModel;
 import androidx.lifecycle.LiveData;
